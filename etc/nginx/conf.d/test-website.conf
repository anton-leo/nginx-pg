# Define the custom log format at the top of the configuration file
log_format custom ' "Local Time" : $time_local '
                  ' "nginx version":  $nginx_version '
                  ' "Remote Address": $remote_addr '            
                  ' "Request ID":  $request_id  '
                  ' "Status": $status '
                  ' "Body bytes sent": $body_bytes_sent '
                  ' "User Agent": $http_user_agent '
                  ' "Proxy Protocol Address": $proxy_protocol_addr '
                  ' "Server Name": $server_name '
                  ' "Upstream Address": $upstream_addr '
                  ' "Request Time": $request_time '
                  ' "Upstream Connect Time": $upstream_connect_time '
                  ' "Upstream Header Time":  $upstream_header_time '
                  ' "Upstream Response Time": $upstream_response_time '
                  ' "Request URI":  $request_uri '
                  ' "Upstream Status":  $upstream_status '
                  ' "SSL Session Reused": $ssl_session_reused '
                  ' "X-Forwarded-For":  $http_x_forwarded_for';

# Check if the Strict-Transport-Security header is already set by the upstream
map $upstream_http_strict_transport_security $add_hsts {
    "" "max-age=31536000; includeSubDomains";
}

# Check if the X-Content-Type-Options header is already set by the upstream
map $upstream_http_x_content_type_options $add_cto {
    "" "nosniff";
}

# Check if the X-XSS-Protection header is already set by the upstream
map $upstream_http_x_xss_protection $add_xss {
    "" "1; mode=block";
}

# Check if the X-Frame-Options header is already set by the upstream
map $upstream_http_x_frame_options $add_xfo {
    "" "DENY";
}

# Check if the Content-Security-Policy header is already set by the upstream
map $upstream_http_content_security_policy $add_csp {
    "" "frame-ancestors 'none'";
}

# Check if the Access-Control-Allow-Credentials header is already set by the upstream
map $upstream_http_access_control_allow_credentials $add_acac {
    "" "TRUE";
}

server {
    listen 80;
    server_name 192.168.1.6;

    # Use the custom log format
    access_log /var/log/nginx/bootstrap.log custom;

    location / {
        root /var/www/html/bootstrap;

        # Add headers only if they are not already set by upstream
        add_header Strict-Transport-Security $add_hsts always;
        add_header X-Content-Type-Options $add_cto always;
        add_header X-XSS-Protection $add_xss always;
        add_header X-Frame-Options $add_xfo always;
        add_header Content-Security-Policy $add_csp always;
        add_header Access-Control-Allow-Credentials $add_acac always;
    }

    location ~* \.(css|jpg|jpeg|js|json|png|mp4|pdf)$ {
        if ($http_referer !~* ^https?://192\.168\.1\.6) {
            return 404;
        }
        root /var/www/html/bootstrap;

        # Add headers only if they are not already set by upstream
        add_header Strict-Transport-Security $add_hsts always;
        add_header X-Content-Type-Options $add_cto always;
        add_header X-XSS-Protection $add_xss always;
        add_header X-Frame-Options $add_xfo always;
        add_header Content-Security-Policy $add_csp always;
        add_header Access-Control-Allow-Credentials $add_acac always;
    }
}